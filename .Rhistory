# Upewnij się, że zmienne Cups, TransferFee i Matches są numeryczne
# Wybór zmiennych
data_3d <- pilkarze %>%
select(Cups, TransferFee, Matches)
# Tworzenie wykresu 3D
plot_ly(data = data_3d,
x = ~TransferFee,
y = ~Matches,
z = ~Cups,
color = ~as.factor(Position), # Dodanie koloru wg pozycji zawodników
colors = c('green', 'orange', 'blue'), # Można ustawić kolory
type = 'scatter3d',
mode = 'markers') %>%
layout(title = "Gablota Pucharowa Realu Madryt",
scene = list(
xaxis = list(title = 'Wycena Transferu'),
yaxis = list(title = 'Liczba Meczów'),
zaxis = list(title = 'Liczba Pucharów')
))
# Instalacja pakietu plotly, jeżeli jeszcze nie jest zainstalowany
# install.packages("plotly")
library(plotly)
# Zaokrąglamy wartości TransferFee do najbliższej liczby całkowitej
pilkarze$TransferFee <- round(pilkarze$TransferFee)
# Tworzymy dane do wykresu 3D
data_3d <- pilkarze %>%
select(Cups, TransferFee, Matches)
# Tworzenie wykresu 3D
plot_ly(data = data_3d,
x = ~TransferFee,
y = ~Matches,
z = ~Cups,
color = ~as.factor(Position), # Kolorowanie wg pozycji zawodników
colors = c('green', 'orange', 'blue'), # Ustalamy kolory
type = 'scatter3d',
mode = 'markers') %>%
layout(title = "Gablota Pucharowa Realu Madryt",
scene = list(
xaxis = list(title = 'Wycena Transferu'),
yaxis = list(title = 'Liczba Meczów'),
zaxis = list(title = 'Liczba Pucharów')
))
# Instalacja pakietu plotly, jeżeli jeszcze nie jest zainstalowany
# install.packages("plotly")
library(plotly)
# Zaokrąglamy wartości TransferFee do najbliższej liczby całkowitej
pilkarze$TransferFee <- round(pilkarze$TransferFee)
# Tworzymy dane do wykresu 3D
data_3d <- pilkarze %>%
select(Cups, TransferFee, Matches)
# Tworzenie wykresu 3D
plot_ly(data = data_3d,
x = ~TransferFee,
y = ~Matches,
z = ~Cups,
color = ~as.factor(Position), # Kolorowanie wg pozycji zawodników
colors = c('green', 'orange', 'blue'), # Ustalamy kolory
type = 'scatter3d',
mode = 'markers') %>%
layout(title = "Gablota Pucharowa Realu Madryt",
scene = list(
xaxis = list(title = 'Wycena Transferu'),
yaxis = list(title = 'Liczba Meczów'),
zaxis = list(title = 'Liczba Pucharów')
))
# Instalacja pakietu plotly, jeżeli jeszcze nie jest zainstalowany
# install.packages("plotly")
library(plotly)
# Zaokrąglamy wartości TransferFee do najbliższej liczby całkowitej
pilkarze$TransferFee <- round(pilkarze$TransferFee)
# Upewniamy się, że zmienna Position jest czynnikiem
pilkarze$Position <- as.factor(pilkarze$Position)
# Tworzymy dane do wykresu 3D
data_3d <- pilkarze %>%
select(Cups, TransferFee, Matches)
# Tworzenie wykresu 3D
plot_ly(data = data_3d,
x = ~TransferFee,
y = ~Matches,
z = ~Cups,
color = ~Position, # Kolorowanie wg pozycji zawodników
colors = c('green', 'orange', 'blue'), # Ustalamy kolory
type = 'scatter3d',
mode = 'markers') %>%
layout(title = "Gablota Pucharowa Realu Madryt",
scene = list(
xaxis = list(title = 'Wycena Transferu'),
yaxis = list(title = 'Liczba Meczów'),
zaxis = list(title = 'Liczba Pucharów')
))
# Instalacja pakietu plotly, jeżeli jeszcze nie jest zainstalowany
# install.packages("plotly")
library(plotly)
# Zaokrąglamy wartość TransferFee
pilkarze$TransferFee <- round(pilkarze$TransferFee)
# Tworzymy dane do wykresu 3D z tylko trzema zmiennymi
data_3d <- pilkarze %>%
select(Cups, TransferFee, Matches)
# Tworzymy wykres 3D
plot_ly(data = data_3d,
x = ~TransferFee,
y = ~Matches,
z = ~Cups,
type = 'scatter3d',
mode = 'markers') %>%
layout(title = "Gablota Pucharowa Realu Madryt",
scene = list(
xaxis = list(title = 'Wycena Transferu'),
yaxis = list(title = 'Liczba Meczów'),
zaxis = list(title = 'Liczba Pucharów')
))
library(plotly)
pilkarze$TransferFee <- round(pilkarze$TransferFee)
data_3d <- pilkarze %>%
select(Cups, TransferFee, Matches)
# Tworzymy etykiety z odpowiednimi wartościami dla Cups, Matches i TransferFee
data_3d$labels <- paste("Transfer Fee: $", data_3d$TransferFee,
"<br>Matches: ", data_3d$Matches,
"<br>Cups: ", data_3d$Cups)
# Tworzymy wykres 3D z niestandardowym etykietowaniem
plot_ly(data = data_3d,
x = ~TransferFee,
y = ~Matches,
z = ~Cups,
type = 'scatter3d',
mode = 'markers',
text = ~labels,  # Przypisujemy etykiety
hoverinfo = "text") %>%
layout(title = "Gablota Pucharowa Realu Madryt",
scene = list(
xaxis = list(title = 'Wycena Transferu'),
yaxis = list(title = 'Liczba Meczów'),
zaxis = list(title = 'Liczba Pucharów')
))
library(plotly)
pilkarze$TransferFee <- round(pilkarze$TransferFee)
data_3d <- pilkarze %>%
select(Cups, TransferFee, Matches)
data_3d$labels <- paste("Transfer Fee: million €", data_3d$TransferFee,
"<br>Matches: ", data_3d$Matches,
"<br>Cups: ", data_3d$Cups)
plot_ly(data = data_3d,
x = ~TransferFee,
y = ~Matches,
z = ~Cups,
type = 'scatter3d',
mode = 'markers',
text = ~labels,
hoverinfo = "text") %>%
layout(title = "",
scene = list(
xaxis = list(title = 'Wycena Transferu (million €)'),
yaxis = list(title = 'Liczba Meczów'),
zaxis = list(title = 'Liczba Pucharów')
))
library(plotly)
pilkarze$TransferFee <- round(pilkarze$TransferFee)
data_3d <- pilkarze %>%
select(Cups, TransferFee, Matches)
data_3d$labels <- paste("Transfer Fee: €", round(data_3d$TransferFee / 1000000, 1), " million", "<br>Matches: ", data_3d$Matches, "<br>Cups: ", data_3d$Cups)
plot_ly(data = data_3d,
x = ~TransferFee,
y = ~Matches,
z = ~Cups,
type = 'scatter3d',
mode = 'markers',
text = ~labels,
hoverinfo = "text") %>%
layout(title = "",
scene = list(
xaxis = list(title = 'Wycena Transferu (million €)'),
yaxis = list(title = 'Liczba Meczów'),
zaxis = list(title = 'Liczba Pucharów')
))
library(plotly)
pilkarze$TransferFee <- round(pilkarze$TransferFee)
data_3d <- pilkarze %>%
select(Cups, TransferFee, Matches)
data_3d$labels <- paste("Transfer Fee: €", data_3d$TransferFee, "<br>Matches: ", data_3d$Matches, "<br>Cups: ", data_3d$Cups)
plot_ly(data = data_3d,
x = ~TransferFee,
y = ~Matches,
z = ~Cups,
type = 'scatter3d',
mode = 'markers',
text = ~labels,
hoverinfo = "text") %>%
layout(title = "",
scene = list(
xaxis = list(title = 'Wycena Transferu (million €)'),
yaxis = list(title = 'Liczba Meczów'),
zaxis = list(title = 'Liczba Pucharów')
))
library(plotly)
pilkarze$TransferFee <- round(pilkarze$TransferFee)
data_3d <- pilkarze %>%
select(Cups, TransferFee, Matches)
data_3d$labels <- paste("Transfer Fee: m. €", data_3d$TransferFee, "<br>Matches: ", data_3d$Matches, "<br>Cups: ", data_3d$Cups)
plot_ly(data = data_3d,
x = ~TransferFee,
y = ~Matches,
z = ~Cups,
type = 'scatter3d',
mode = 'markers',
text = ~labels,
hoverinfo = "text") %>%
layout(title = "Relacja między wyceną transferu, liczbą meczów a liczbą pucharów zdobytych przez zawodników",
scene = list(
xaxis = list(title = 'Wycena Transferu (million €)'),
yaxis = list(title = 'Liczba Meczów'),
zaxis = list(title = 'Liczba Pucharów')
))
library(plotly)
pilkarze$TransferFee <- round(pilkarze$TransferFee)
data_3d <- pilkarze %>%
select(Cups, TransferFee, Matches)
data_3d$labels <- paste("Transfer Fee: m. €", data_3d$TransferFee, "<br>Matches: ", data_3d$Matches, "<br>Cups: ", data_3d$Cups)
plot_ly(data = data_3d,
x = ~TransferFee,
y = ~Matches,
z = ~Cups,
type = 'scatter3d',
mode = 'markers') %>%
layout(
title = "Relacja między wyceną transferu, liczbą meczów a liczbą pucharów zdobytych przez zawodników Realu Madryt",
scene = list(
xaxis = list(title = 'Wycena Transferu (million €)'),
yaxis = list(title = 'Liczba Meczów'),
zaxis = list(title = 'Liczba Pucharów')
),
margin = list(
t = 100
)
)
library(plotly)
pilkarze$TransferFee <- round(pilkarze$TransferFee)
data_3d <- pilkarze %>%
select(Cups, TransferFee, Matches)
data_3d$labels <- paste("Transfer Fee: m. €", data_3d$TransferFee, "<br>Matches: ", data_3d$Matches, "<br>Cups: ", data_3d$Cups)
plot_ly(data = data_3d,
x = ~TransferFee,
y = ~Matches,
z = ~Cups,
type = 'scatter3d',
mode = 'markers') %>%
layout(
title = "Relacja między wyceną transferu, liczbą meczów a liczbą zdobytych pucharów",
scene = list(
xaxis = list(title = 'Wycena Transferu (million €)'),
yaxis = list(title = 'Liczba Meczów'),
zaxis = list(title = 'Liczba Pucharów')
),
margin = list(
t = 100
)
)
library(plotly)
pilkarze$TransferFee <- round(pilkarze$TransferFee)
data_3d <- pilkarze %>%
select(Cups, TransferFee, Matches)
data_3d$labels <- paste("Transfer Fee: m. €", data_3d$TransferFee, "<br>Matches: ", data_3d$Matches, "<br>Cups: ", data_3d$Cups)
plot_ly(data = data_3d,
x = ~TransferFee,
y = ~Matches,
z = ~Cups,
type = 'scatter3d',
mode = 'markers') %>%
layout(
title = "Relacja między wyceną transferu, liczbą meczów a liczbą zdobytych pucharów",
scene = list(
xaxis = list(title = 'Wycena Transferu (million €)'),
yaxis = list(title = 'Liczba Meczów'),
zaxis = list(title = 'Liczba Pucharów')
),
margin = list(
t = 100
)
)
library(plotly)
pilkarze$TransferFee <- round(pilkarze$TransferFee)
data_3d <- pilkarze %>%
select(Cups, TransferFee, Matches)
data_3d$labels <- paste("Transfer Fee: m. €", data_3d$TransferFee, "<br>Matches: ", data_3d$Matches, "<br>Cups: ", data_3d$Cups)
plot_ly(data = data_3d,
x = ~TransferFee,
y = ~Matches,
z = ~Cups,
color = ~as.factor(Position),
colors = c('green', 'orange', 'blue'),
type = 'scatter3d',
mode = 'markers',
text = ~paste("Transfer Fee: €", TransferFee, "<br>",
"Matches: ", Matches, "<br>",
"Cups: ", Cups),
hoverinfo = "text") %>%
layout(
title = "Relacja między wyceną transferu, liczbą meczów a liczbą zdobytych pucharów",
scene = list(
xaxis = list(title = 'Wycena Transferu (million €)'),
yaxis = list(title = 'Liczba Meczów'),
zaxis = list(title = 'Liczba Pucharów')
),
margin = list(
t = 100
)
)
library(plotly)
pilkarze$TransferFee <- round(pilkarze$TransferFee)
data_3d <- pilkarze %>%
select(Cups, TransferFee, Matches)
data_3d$labels <- paste("Transfer Fee: €", data_3d$TransferFee,
"<br>Matches: ", data_3d$Matches,
"<br>Cups: ", data_3d$Cups)
plot_ly(data = data_3d,
x = ~TransferFee,
y = ~Matches,
z = ~Cups,
type = 'scatter3d',
mode = 'markers',
text = ~labels,
hoverinfo = "text") %>%
layout(title = "Relacja między wyceną transferu, liczbą meczów a liczbą zdobytych pucharów.",
scene = list(
xaxis = list(title = 'Wycena Transferu (mln. €)'),
yaxis = list(title = 'Liczba Meczów'),
zaxis = list(title = 'Liczba Pucharów')
))
library(plotly)
pilkarze$TransferFee <- round(pilkarze$TransferFee)
data_3d <- pilkarze %>%
select(Cups, TransferFee, Matches)
data_3d$labels <- paste("Transfer Fee: €", data_3d$TransferFee,
"<br>Matches: ", data_3d$Matches,
"<br>Cups: ", data_3d$Cups)
plot_ly(data = data_3d,
x = ~TransferFee,
y = ~Matches,
z = ~Cups,
type = 'scatter3d',
mode = 'markers',
text = ~labels,
hoverinfo = "text") %>%
layout(title = "Relacja między wyceną transferu, liczbą meczów a liczbą zdobytych pucharów.",
scene = list(
xaxis = list(title = 'Wycena Transferu (mln. €)'),
yaxis = list(title = 'Liczba Meczów'),
zaxis = list(title = 'Liczba Pucharów')
),margin = list(t = 100))
pilkarze_sorted <- pilkarze %>%
mutate(season_group = case_when(
Season %in% 1991:2004 ~ "91/92 - 03/04",
Season %in% 2004:2011 ~ "04/05 - 10/11",
Season %in% 2011:2018 ~ "11/12 - 17/18",
Season %in% 2018:2025 ~ "18/19 - 24/25",
TRUE ~ "Other"
))
library(dplyr)
# Podział sezonów na kategorie
pilkarze_sorted <- pilkarze %>%
mutate(season_group = case_when(
Season %in% 1991:2004 ~ "91/92 - 03/04",
Season %in% 2004:2011 ~ "04/05 - 10/11",
Season %in% 2011:2018 ~ "11/12 - 17/18",
Season %in% 2018:2025 ~ "18/19 - 24/25",
TRUE ~ "Other"
))
# Wykres z liczbą pucharów w zależności od sezonu
ggplot(pilkarze_sorted, aes(x = Season, y = Cups, color = season_group)) +
geom_point() +
geom_smooth(method = "lm", se = FALSE, color = "black", linetype = "dashed") +
scale_color_manual(values = c("green", "orange", "blue", "red")) +
labs(
title = "Liczba pucharów zdobytych przez zawodników w zależności od sezonu",
x = "Sezon",
y = "Liczba Pucharów"
) +
theme_minimal() +
theme(
legend.title = element_blank(),
legend.position = "bottom",
plot.title = element_text(size = 14, face = "bold", hjust = 0.5)
)
library(dplyr)
library(plotly)
pilkarze_normalized <- pilkarze %>%
mutate(
Season_num = as.numeric(sub("/.*", "", Season)) + 2000,
TransferFee = as.numeric(gsub(",", ".", TransferFee)))
pilkarze_normalized <- pilkarze_normalized %>%
mutate(
TransferLabel = ifelse(TransferFee > 0, paste("€", formatC(TransferFee, format = "f", digits = 2)), "Brak danych")
)
wykres_s <- plot_ly(pilkarze_normalized, x = ~Season_num, y = ~TransferFee,
type = 'scatter', mode = 'markers',
marker = list(size = ~TransferFee / 5,
color = ~TransferFee,
colorscale = 'YlGnBu', showscale = TRUE),
text = ~paste("Season: ", Season_num, "<br>Transfer: ", TransferLabel),
hoverinfo = 'text') %>%
layout(xaxis = list(title = 'Season', range = c(1998, 2024)),
yaxis = list(title = 'Transfer Fee (mln €)'),
showlegend = FALSE)
wykres_s
library(ggridges)
library(viridis)
library(forcats)
library(dplyr)
# Modyfikacja danych
data <- pilkarze %>%
mutate(Position = as.factor(trimws(Position)),
PositionGroup = case_when(
Position == "Bramkarz" ~ "Obrońcy",
Position %in% c("Lewy obrońca", "Prawy obrońca", "Środkowy obrońca") ~ "Obrońcy",
Position %in% c("Środkowy pomocnik", "Defensywny pomocnik", "Ofensywny pomocnik", "Lewy pomocnik", "Prawy pomocnik") ~ "Pomocnicy",
Position %in% c("Środkowy napastnik", "Cofnięty napastnik", "Lewy napastnik", "Prawy napastnik") ~ "Napastnicy",
TRUE ~ "Inne"
))
data_filtered <- data %>%
filter(PositionGroup %in% c("Obrońcy", "Pomocnicy", "Napastnicy")) %>%
mutate(PositionGroup = fct_relevel(PositionGroup, "Obrońcy", "Pomocnicy", "Napastnicy"))
# Tworzenie wykresu
ggplot(data_filtered, aes(x = Age, y = PositionGroup, fill = PositionGroup)) +
geom_density_ridges(alpha = 0.8, bandwidth = 1.5) +
scale_fill_viridis(discrete = TRUE) +
theme_minimal() +
theme(
legend.position = "none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8),
panel.grid.major.y = element_line(color = "gray", size = 0.5),
panel.grid.minor = element_blank(), # usunięcie drobnej siatki
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),  # Tytuł wykresu
axis.title.x = element_text(size = 12, face = "bold"),  # Tytuł osi X
axis.title.y = element_text(size = 12, face = "bold")   # Tytuł osi Y
) +
xlab("Wiek zawodnika") +
ylab("Grupa pozycji") +
ggtitle("Rozkład wieku zawodników Realu Madryt w zależności od pozycji") +  # Tytuł wykresu
theme(
axis.text.x = element_text(angle = 45, hjust = 1)
) +
scale_x_continuous(
breaks = seq(18, 35, by = 2)
)
library(grid)
library(gridExtra)
jedenastka <- image_read("C:\Users\igork\OneDrive\Pulpit\Wizulizacja_Danych\Projekt_real\jedenastka.jpg")
library(grid)
library(gridExtra)
jedenastka <- image_read
library(grid)
library(gridExtra)
plik <- "C:\\Users\\igork\\OneDrive\\Pulpit\\Wizulizacja_Danych\\Projekt_real\\jedenastka.jpg"
jedenastka <- image_read(plik)
library(grid)
library(gridExtra)
plik <- "C:\\Users\\igork\\OneDrive\\Pulpit\\Wizulizacja_Danych\\Projekt_real\\jedenastka.jpg"
jedenastka <- image_read(plik)
library(grid)
library(gridExtra)
library(magick)
plik <- "C:\\Users\\igork\\OneDrive\\Pulpit\\Wizulizacja_Danych\\Projekt_real\\jedenastka.jpg"
jedenastka <- image_read(plik)
jedenastka1 <- image_scale(jedenastka, "576x1024")
jedenastka1
library(grid)
library(gridExtra)
library(magick)
plik <- "C:\\Users\\igork\\OneDrive\\Pulpit\\Wizulizacja_Danych\\Projekt_real\\jedenastka.jpg"
jedenastka <- image_read(plik)
jedenastka1 <- image_scale(jedenastka, "976x1424")
jedenastka1
library(grid)
library(gridExtra)
library(magick)
plik <- "C:\\Users\\igork\\OneDrive\\Pulpit\\Wizulizacja_Danych\\Projekt_real\\jedenastka.jpg"
jedenastka <- image_read(plik)
jedenastka1 <- image_scale(jedenastka, "1324x1324")
jedenastka1
library(grid)
library(gridExtra)
library(magick)
plik <- "C:\\Users\\igork\\OneDrive\\Pulpit\\Wizulizacja_Danych\\Projekt_real\\jedenastka.jpg"
jedenastka <- image_read(plik)
jedenastka1 <- image_scale(jedenastka, "1324x1024")
jedenastka1
library(readxl)
library(magick)
library(readr)
plik <- "C:\\Users\\igork\\OneDrive\\Pulpit\\Wizulizacja_Danych\\Projekt_real\\herb.jpg"
logo1 <- image_read(plik)
plik_path <- "C:\\Users\\igork\\OneDrive\\Pulpit\\Wizulizacja_Danych\\Projekt_real\\Projekt0.xlsx"
pilkarze <- read_excel(plik_path)
library(grid)
library(gridExtra)
plik <- "C:\\Users\\igork\\OneDrive\\Pulpit\\Wizulizacja_Danych\\Projekt_real\\dane.jpg"
player_image <- image_read(plik)
library(dplyr)
pilkarze <- pilkarze %>%
mutate(
Age = as.numeric(Age)
) %>%
filter(!is.na(Age))
average_age_by_league <- pilkarze %>%
group_by(League) %>%
summarise(average_age = mean(Age, na.rm = TRUE)) %>%
filter(!is.na(average_age))
print(average_age_by_league)
library(ggplot2)
library(plotly)
library(viridis)
library(hrbrthemes)
